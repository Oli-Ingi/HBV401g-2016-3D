/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hbv.view;

import hbv.controller.SearchManager;
import hbv.model.*;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import java.util.NoSuchElementException;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.Cursor;

public class MainDisplay extends javax.swing.JFrame {

    ArrayList<Review> tourReviews;
    ArrayList<Tour> tours;
    DefaultListModel<Tour> tourModel;
    DefaultListModel<Review> tourReviewModel;
    DefaultListModel<Review> guideReviewModel;
    private int ratingChosen;
    private Tour currentTour;
    private Guide currentGuide;
    private ArrayList<String> ratedList;
    
    public MainDisplay() {
       
        initComponents();
        initExtras();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    private void initExtras(){
        this.setResizable(false);
        seatsErrorLab.setVisible(false);
        seatsTxt.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent de) {
                checkInput();
            }
            @Override
            public void removeUpdate(DocumentEvent de) {
                checkInput();
            }
            @Override
            public void changedUpdate(DocumentEvent de) {
                checkInput();
            }
            private void checkInput(){
                if(!seatsTxt.getText().equals("")){
                    try{
                        int tmp = Integer.parseInt(seatsTxt.getText());
                        if(tmp<0) throw new NumberFormatException();
                        seatsErrorLab.setVisible(false);
                    }catch(NumberFormatException e){
                        seatsErrorLab.setVisible(true);
                    }
                } else seatsErrorLab.setVisible(false);
            }
        });
        
        tourReviews = null;
        tours = null;
        tourModel = new DefaultListModel<>();
        tourReviewModel = new DefaultListModel<>();
        guideReviewModel = new DefaultListModel<>();
        tourList.setModel(tourModel);
        tourReviewList.setModel(tourReviewModel);
        guideReviewsList.setModel(guideReviewModel);
        tourList.setCellRenderer(new TourCellRenderer());
        tourReviewList.setCellRenderer(new ReviewCellRenderer());
        guideReviewsList.setCellRenderer(new ReviewCellRenderer());
        
        tourGuideLab1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        tourGuideLab2.setCursor(new Cursor(Cursor.HAND_CURSOR));
        tourGuideLab3.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPan = new javax.swing.JPanel();
        searchParamsPan = new javax.swing.JPanel();
        typeLab = new javax.swing.JLabel();
        priceLab = new javax.swing.JLabel();
        dateLab = new javax.swing.JLabel();
        durationLab = new javax.swing.JLabel();
        departureLab = new javax.swing.JLabel();
        destinationLab = new javax.swing.JLabel();
        nameLab = new javax.swing.JLabel();
        seatsLab = new javax.swing.JLabel();
        priceFromLab = new javax.swing.JLabel();
        dateFromLab = new javax.swing.JLabel();
        durationFromLab = new javax.swing.JLabel();
        typeCombo = new javax.swing.JComboBox(new String[]{"","Adventure","Golden Circle","Nature","Northern Lights","Reykjavik"});
        pickupLab = new javax.swing.JLabel();
        String[] priceValues = new String[]{"","2.500 kr.","5.000 kr.","7.500 kr.",
            "10.000 kr.","12.500 kr.","15.000 kr.","17.500 kr.","20.000 kr.","25.000 kr.",
            "30.000 kr.","35.000 kr.","40.000 kr.","50.000 kr","60.000 kr.","75.000 kr.","100.000 kr."};
        priceFromCombo = new javax.swing.JComboBox(priceValues);
        priceToLab = new javax.swing.JLabel();
        priceToCombo = new javax.swing.JComboBox(priceValues);
        fromDateChooser = new com.toedter.calendar.JDateChooser();
        dateToLab = new javax.swing.JLabel();
        toDateChooser = new com.toedter.calendar.JDateChooser();
        String[] durationValues = new String[]{"","2","5","8","12","15","18","20","24"};
        durationFromCombo = new javax.swing.JComboBox(durationValues);
        durationToLab = new javax.swing.JLabel();
        durationToCombo = new javax.swing.JComboBox(durationValues);
        departureTxt = new javax.swing.JTextField();
        destinationTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        seatsTxt = new javax.swing.JTextField();
        pickupCheck = new javax.swing.JCheckBox();
        ratingLab = new javax.swing.JLabel();
        ratingFromLab = new javax.swing.JLabel();
        ratingCombo = new javax.swing.JComboBox(new String[]{"","1","2","3","4","5"});
        searchBtn = new javax.swing.JButton();
        seatsErrorLab = new javax.swing.JLabel();
        resultsPan = new javax.swing.JPanel();
        listSwitcherPan = new javax.swing.JPanel();
        introListPan = new javax.swing.JPanel();
        introLab = new javax.swing.JLabel();
        listPan = new javax.swing.JPanel();
        orderCombo = new javax.swing.JComboBox(new String[]{"","Name","Date","Type","Rating","Price"});
        orderLab = new javax.swing.JLabel();
        tourScroller = new javax.swing.JScrollPane();
        tourList = new javax.swing.JList();
        resultsLab = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        searchListImagePan = new javax.swing.JPanel();
        noResLab = new javax.swing.JLabel();
        mainTitlePan = new javax.swing.JPanel();
        mainTitleLab = new javax.swing.JLabel();
        secondaryTitlePan = new javax.swing.JPanel();
        secondaryTitleLab = new javax.swing.JLabel();
        selectedSep = new javax.swing.JSeparator();
        selectedMainCard = new javax.swing.JPanel();
        nothingChild = new javax.swing.JPanel();
        nothingLoadedLab = new javax.swing.JLabel();
        tourChild = new javax.swing.JPanel();
        tourDetailsPan = new javax.swing.JPanel();
        tourTypeLab = new javax.swing.JLabel();
        tourPriceLab = new javax.swing.JLabel();
        tourDateLab = new javax.swing.JLabel();
        tourDurationLab = new javax.swing.JLabel();
        tourDestinationLab = new javax.swing.JLabel();
        tourDepartureLab = new javax.swing.JLabel();
        tourPickupLab = new javax.swing.JLabel();
        tourSeatsLab = new javax.swing.JLabel();
        tourGuidesLab = new javax.swing.JLabel();
        tourGuideLab1 = new javax.swing.JLabel();
        tourGuideLab2 = new javax.swing.JLabel();
        tourGuideLab3 = new javax.swing.JLabel();
        tourDescPan = new javax.swing.JPanel();
        tourDescScroller = new javax.swing.JScrollPane();
        tourDescTxt = new javax.swing.JTextArea();
        tourReviewsPan = new javax.swing.JPanel();
        tourReviewWriteBtn = new javax.swing.JButton();
        tourBeenLab = new javax.swing.JLabel();
        tourReviewSep = new javax.swing.JSeparator();
        tourStarsSep = new javax.swing.JSeparator();
        tourReviewSwitcher = new javax.swing.JPanel();
        tourReviewListPan = new javax.swing.JPanel();
        tourReviewScroller = new javax.swing.JScrollPane();
        tourReviewList = new javax.swing.JList();
        noTourReviewsPan = new javax.swing.JPanel();
        noTourReviewsLab = new javax.swing.JLabel();
        ratingSwitcher = new javax.swing.JPanel();
        rateStarsPan = new javax.swing.JPanel();
        tourStarsLab = new javax.swing.JLabel();
        tourReviewRateBtn = new javax.swing.JButton();
        ratedStarsPan = new javax.swing.JPanel();
        youRatedLab = new javax.swing.JLabel();
        ratedStarsLab = new javax.swing.JLabel();
        guideChild = new javax.swing.JPanel();
        guideDetailsPan = new javax.swing.JPanel();
        guideNameLab = new javax.swing.JLabel();
        guideGenderLab = new javax.swing.JLabel();
        guideAgeLab = new javax.swing.JLabel();
        guideProfilePan = new javax.swing.JPanel();
        guideProfileScroller = new javax.swing.JScrollPane();
        guideProfileTxtArea = new javax.swing.JTextArea();
        guideReviewsPan = new javax.swing.JPanel();
        guideReviewWriteBtn = new javax.swing.JButton();
        guideReviewSwitcher = new javax.swing.JPanel();
        guideReviewListPan = new javax.swing.JPanel();
        guideReviewScroller = new javax.swing.JScrollPane();
        guideReviewsList = new javax.swing.JList();
        noGuideReviews = new javax.swing.JPanel();
        noGuideReviewsLab = new javax.swing.JLabel();
        guideBackBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchParamsPan.setBackground(new java.awt.Color(204, 255, 255));
        searchParamsPan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchParamsPan.setOpaque(false);

        typeLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        typeLab.setText("Type:");

        priceLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceLab.setText("Price:");

        dateLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dateLab.setText("Date:");

        durationLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        durationLab.setText("Duration:");

        departureLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        departureLab.setText("Departure location:");

        destinationLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        destinationLab.setText("Destination:");

        nameLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nameLab.setText("Name:");

        seatsLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        seatsLab.setText("Available seats:");

        priceFromLab.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        priceFromLab.setText("from:");

        dateFromLab.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        dateFromLab.setText("from:");

        durationFromLab.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        durationFromLab.setText("from:");

        pickupLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pickupLab.setText("Hotel pickup only:");

        priceToLab.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        priceToLab.setText("to:");

        dateToLab.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        dateToLab.setText("to:");

        durationToLab.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        durationToLab.setText("to: ");

        ratingLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ratingLab.setText("Rating:");

        ratingFromLab.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        ratingFromLab.setText("from: ");

        searchBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/searchBtnb.png"))); // NOI18N
        searchBtn.setToolTipText("All search parameters are optional");
        searchBtn.setFocusable(false);
        searchBtn.setOpaque(false);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        seatsErrorLab.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        seatsErrorLab.setForeground(new java.awt.Color(255, 0, 0));
        seatsErrorLab.setText("Invalid Character(s)");

        javax.swing.GroupLayout searchParamsPanLayout = new javax.swing.GroupLayout(searchParamsPan);
        searchParamsPan.setLayout(searchParamsPanLayout);
        searchParamsPanLayout.setHorizontalGroup(
            searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchParamsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(typeLab)
                    .addComponent(priceLab)
                    .addComponent(dateLab)
                    .addComponent(durationLab)
                    .addComponent(departureLab)
                    .addComponent(destinationLab)
                    .addComponent(nameLab)
                    .addComponent(seatsLab)
                    .addComponent(pickupLab)
                    .addComponent(ratingLab))
                .addGap(19, 19, 19)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pickupCheck)
                    .addGroup(searchParamsPanLayout.createSequentialGroup()
                        .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(searchParamsPanLayout.createSequentialGroup()
                                .addComponent(ratingFromLab)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ratingCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchParamsPanLayout.createSequentialGroup()
                                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(durationFromLab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addComponent(dateFromLab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(priceFromLab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(priceFromCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fromDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(durationFromCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(departureTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destinationTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchParamsPanLayout.createSequentialGroup()
                                .addComponent(seatsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seatsErrorLab))
                            .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(typeCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(priceToLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateToLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(durationToLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(durationToCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(toDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceToCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchParamsPanLayout.setVerticalGroup(
            searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchParamsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(searchParamsPanLayout.createSequentialGroup()
                        .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeLab))
                        .addGap(18, 18, 18)
                        .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priceLab)
                            .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(priceFromLab)
                                .addComponent(priceFromCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(priceToLab)
                                .addComponent(priceToCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchParamsPanLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateLab)
                                    .addComponent(dateFromLab)))
                            .addGroup(searchParamsPanLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dateToLab)
                                    .addComponent(toDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(fromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(durationLab)
                    .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(durationFromLab)
                        .addComponent(durationFromCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(durationToLab)
                        .addComponent(durationToCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departureLab)
                    .addComponent(departureTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationLab)
                    .addComponent(destinationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLab)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seatsLab)
                    .addComponent(seatsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsErrorLab))
                .addGap(18, 18, 18)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickupLab)
                    .addComponent(pickupCheck))
                .addGap(18, 18, 18)
                .addGroup(searchParamsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingLab)
                    .addComponent(ratingFromLab)
                    .addComponent(ratingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchBtn)
                .addGap(19, 19, 19))
        );

        resultsPan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        resultsPan.setPreferredSize(new java.awt.Dimension(496, 524));

        listSwitcherPan.setLayout(new java.awt.CardLayout());

        introLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        introLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Intro.png"))); // NOI18N

        javax.swing.GroupLayout introListPanLayout = new javax.swing.GroupLayout(introListPan);
        introListPan.setLayout(introListPanLayout);
        introListPanLayout.setHorizontalGroup(
            introListPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(introLab, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );
        introListPanLayout.setVerticalGroup(
            introListPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(introLab, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
        );

        listSwitcherPan.add(introListPan, "card4");

        orderCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderComboActionPerformed(evt);
            }
        });

        orderLab.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        orderLab.setText("Order by: ");

        tourList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tourList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tourListValueChanged(evt);
            }
        });
        tourScroller.setViewportView(tourList);

        resultsLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultsLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultsLab.setText("Search results:");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/showFindOff.png"))); // NOI18N

        javax.swing.GroupLayout listPanLayout = new javax.swing.GroupLayout(listPan);
        listPan.setLayout(listPanLayout);
        listPanLayout.setHorizontalGroup(
            listPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanLayout.createSequentialGroup()
                .addGroup(listPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listPanLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(orderLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(orderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE))
                    .addGroup(listPanLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(listPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tourScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                    .addComponent(resultsLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        listPanLayout.setVerticalGroup(
            listPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultsLab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(listPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listPanLayout.createSequentialGroup()
                        .addGroup(listPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderLab)
                            .addComponent(orderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE))
                    .addComponent(tourScroller))
                .addContainerGap())
        );

        listSwitcherPan.add(listPan, "card2");

        noResLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noResLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/noRs.png"))); // NOI18N

        javax.swing.GroupLayout searchListImagePanLayout = new javax.swing.GroupLayout(searchListImagePan);
        searchListImagePan.setLayout(searchListImagePanLayout);
        searchListImagePanLayout.setHorizontalGroup(
            searchListImagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noResLab, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );
        searchListImagePanLayout.setVerticalGroup(
            searchListImagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noResLab, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
        );

        listSwitcherPan.add(searchListImagePan, "card3");

        javax.swing.GroupLayout resultsPanLayout = new javax.swing.GroupLayout(resultsPan);
        resultsPan.setLayout(resultsPanLayout);
        resultsPanLayout.setHorizontalGroup(
            resultsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listSwitcherPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        resultsPanLayout.setVerticalGroup(
            resultsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listSwitcherPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        mainTitlePan.setOpaque(false);

        mainTitleLab.setFont(new java.awt.Font("Viner Hand ITC", 0, 36)); // NOI18N
        mainTitleLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTitleLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/title.png"))); // NOI18N

        javax.swing.GroupLayout mainTitlePanLayout = new javax.swing.GroupLayout(mainTitlePan);
        mainTitlePan.setLayout(mainTitlePanLayout);
        mainTitlePanLayout.setHorizontalGroup(
            mainTitlePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainTitlePanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTitleLab, javax.swing.GroupLayout.PREFERRED_SIZE, 974, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainTitlePanLayout.setVerticalGroup(
            mainTitlePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainTitlePanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainTitleLab)
                .addContainerGap())
        );

        secondaryTitleLab.setFont(new java.awt.Font("Viner Hand ITC", 0, 24)); // NOI18N
        secondaryTitleLab.setForeground(new java.awt.Color(0, 0, 255));
        secondaryTitleLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout secondaryTitlePanLayout = new javax.swing.GroupLayout(secondaryTitlePan);
        secondaryTitlePan.setLayout(secondaryTitlePanLayout);
        secondaryTitlePanLayout.setHorizontalGroup(
            secondaryTitlePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondaryTitlePanLayout.createSequentialGroup()
                .addComponent(secondaryTitleLab, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        secondaryTitlePanLayout.setVerticalGroup(
            secondaryTitlePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondaryTitlePanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(secondaryTitleLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        selectedSep.setOrientation(javax.swing.SwingConstants.VERTICAL);

        selectedMainCard.setLayout(new java.awt.CardLayout());

        nothingLoadedLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nothingLoadedLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nothingLoadedLab.setText("No tour loaded");

        javax.swing.GroupLayout nothingChildLayout = new javax.swing.GroupLayout(nothingChild);
        nothingChild.setLayout(nothingChildLayout);
        nothingChildLayout.setHorizontalGroup(
            nothingChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nothingChildLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nothingLoadedLab, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addContainerGap())
        );
        nothingChildLayout.setVerticalGroup(
            nothingChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nothingChildLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nothingLoadedLab, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                .addContainerGap())
        );

        selectedMainCard.add(nothingChild, "card4");

        tourChild.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tourDetailsPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tour details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tourTypeLab.setText("Type:");

        tourPriceLab.setText("Price:");

        tourDateLab.setText("Date:");

        tourDurationLab.setText("Duration:");

        tourDestinationLab.setText("Destination:");

        tourDepartureLab.setText("Departure from:");

        tourPickupLab.setText("Hotel pickup:");

        tourSeatsLab.setText("Available seats:");

        tourGuidesLab.setText("Guide(s):");

        tourGuideLab1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        tourGuideLab1.setForeground(new java.awt.Color(0, 0, 255));
        tourGuideLab1.setText("Name");
        tourGuideLab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tourGuideLab1MouseClicked(evt);
            }
        });

        tourGuideLab2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        tourGuideLab2.setForeground(new java.awt.Color(0, 0, 255));
        tourGuideLab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tourGuideLab2MouseClicked(evt);
            }
        });

        tourGuideLab3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tourGuideLab3.setForeground(new java.awt.Color(0, 0, 255));
        tourGuideLab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tourGuideLab3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tourDetailsPanLayout = new javax.swing.GroupLayout(tourDetailsPan);
        tourDetailsPan.setLayout(tourDetailsPanLayout);
        tourDetailsPanLayout.setHorizontalGroup(
            tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourDetailsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tourDetailsPanLayout.createSequentialGroup()
                        .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tourDateLab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tourPriceLab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tourTypeLab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tourPickupLab, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tourDurationLab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tourDestinationLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tourDepartureLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tourSeatsLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tourDetailsPanLayout.createSequentialGroup()
                        .addComponent(tourGuidesLab)
                        .addGap(18, 18, 18)
                        .addComponent(tourGuideLab1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tourGuideLab2)
                        .addGap(98, 98, 98)
                        .addComponent(tourGuideLab3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tourDetailsPanLayout.setVerticalGroup(
            tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourDetailsPanLayout.createSequentialGroup()
                .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tourTypeLab)
                    .addComponent(tourDurationLab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tourPriceLab)
                    .addComponent(tourDestinationLab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tourDateLab)
                    .addComponent(tourDepartureLab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tourPickupLab)
                    .addComponent(tourSeatsLab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tourDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tourGuidesLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tourGuideLab1)
                    .addComponent(tourGuideLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tourGuideLab3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tourDescPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Description", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tourDescTxt.setEditable(false);
        tourDescTxt.setColumns(20);
        tourDescTxt.setRows(5);
        tourDescScroller.setViewportView(tourDescTxt);

        javax.swing.GroupLayout tourDescPanLayout = new javax.swing.GroupLayout(tourDescPan);
        tourDescPan.setLayout(tourDescPanLayout);
        tourDescPanLayout.setHorizontalGroup(
            tourDescPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourDescPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tourDescScroller)
                .addContainerGap())
        );
        tourDescPanLayout.setVerticalGroup(
            tourDescPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tourDescScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
        );

        tourReviewsPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reviews", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tourReviewWriteBtn.setText("Write review");
        tourReviewWriteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tourReviewWriteBtnActionPerformed(evt);
            }
        });

        tourBeenLab.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        tourBeenLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tourBeenLab.setText("Been on this tour?");

        tourStarsSep.setOrientation(javax.swing.SwingConstants.VERTICAL);

        tourReviewSwitcher.setLayout(new java.awt.CardLayout());

        tourReviewList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tourReviewList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tourReviewListMouseClicked(evt);
            }
        });
        tourReviewScroller.setViewportView(tourReviewList);

        javax.swing.GroupLayout tourReviewListPanLayout = new javax.swing.GroupLayout(tourReviewListPan);
        tourReviewListPan.setLayout(tourReviewListPanLayout);
        tourReviewListPanLayout.setHorizontalGroup(
            tourReviewListPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourReviewListPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tourReviewScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addContainerGap())
        );
        tourReviewListPanLayout.setVerticalGroup(
            tourReviewListPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourReviewListPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tourReviewScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tourReviewSwitcher.add(tourReviewListPan, "card2");

        noTourReviewsLab.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        noTourReviewsLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noTourReviewsLab.setText("No reviews for this tour yet");

        javax.swing.GroupLayout noTourReviewsPanLayout = new javax.swing.GroupLayout(noTourReviewsPan);
        noTourReviewsPan.setLayout(noTourReviewsPanLayout);
        noTourReviewsPanLayout.setHorizontalGroup(
            noTourReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noTourReviewsLab, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );
        noTourReviewsPanLayout.setVerticalGroup(
            noTourReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noTourReviewsLab, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
        );

        tourReviewSwitcher.add(noTourReviewsPan, "card3");

        ratingSwitcher.setLayout(new java.awt.CardLayout());

        tourStarsLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/0star.png"))); // NOI18N
        tourStarsLab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tourStarsLab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tourStarsLabMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tourStarsLabMouseReleased(evt);
            }
        });

        tourReviewRateBtn.setText("Rate");
        tourReviewRateBtn.setEnabled(false);
        tourReviewRateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tourReviewRateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rateStarsPanLayout = new javax.swing.GroupLayout(rateStarsPan);
        rateStarsPan.setLayout(rateStarsPanLayout);
        rateStarsPanLayout.setHorizontalGroup(
            rateStarsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rateStarsPanLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(tourStarsLab)
                .addGap(18, 18, 18)
                .addComponent(tourReviewRateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        rateStarsPanLayout.setVerticalGroup(
            rateStarsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tourStarsLab, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(tourReviewRateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        ratingSwitcher.add(rateStarsPan, "card2");

        youRatedLab.setText("You rated:");

        javax.swing.GroupLayout ratedStarsPanLayout = new javax.swing.GroupLayout(ratedStarsPan);
        ratedStarsPan.setLayout(ratedStarsPanLayout);
        ratedStarsPanLayout.setHorizontalGroup(
            ratedStarsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ratedStarsPanLayout.createSequentialGroup()
                .addComponent(youRatedLab, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ratedStarsLab, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ratedStarsPanLayout.setVerticalGroup(
            ratedStarsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(youRatedLab, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(ratedStarsLab, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        ratingSwitcher.add(ratedStarsPan, "card3");

        javax.swing.GroupLayout tourReviewsPanLayout = new javax.swing.GroupLayout(tourReviewsPan);
        tourReviewsPan.setLayout(tourReviewsPanLayout);
        tourReviewsPanLayout.setHorizontalGroup(
            tourReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourReviewsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tourReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tourBeenLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tourReviewSep, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tourReviewsPanLayout.createSequentialGroup()
                        .addComponent(tourReviewWriteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tourStarsSep, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ratingSwitcher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tourReviewSwitcher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tourReviewsPanLayout.setVerticalGroup(
            tourReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourReviewsPanLayout.createSequentialGroup()
                .addComponent(tourReviewSwitcher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tourReviewSep, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tourBeenLab, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tourReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tourReviewWriteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(ratingSwitcher, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tourStarsSep))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tourChildLayout = new javax.swing.GroupLayout(tourChild);
        tourChild.setLayout(tourChildLayout);
        tourChildLayout.setHorizontalGroup(
            tourChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourChildLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tourChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tourDetailsPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tourDescPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tourReviewsPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tourChildLayout.setVerticalGroup(
            tourChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tourChildLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tourDetailsPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tourDescPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tourReviewsPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        selectedMainCard.add(tourChild, "card2");

        guideChild.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        guideDetailsPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Guide Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        guideNameLab.setText("Full name:");

        guideGenderLab.setText("Gender:");

        guideAgeLab.setText("Age:");

        javax.swing.GroupLayout guideDetailsPanLayout = new javax.swing.GroupLayout(guideDetailsPan);
        guideDetailsPan.setLayout(guideDetailsPanLayout);
        guideDetailsPanLayout.setHorizontalGroup(
            guideDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideDetailsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(guideDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guideNameLab)
                    .addComponent(guideGenderLab)
                    .addComponent(guideAgeLab))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        guideDetailsPanLayout.setVerticalGroup(
            guideDetailsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideDetailsPanLayout.createSequentialGroup()
                .addComponent(guideNameLab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guideGenderLab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guideAgeLab)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        guideProfilePan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Guide Profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        guideProfileTxtArea.setEditable(false);
        guideProfileTxtArea.setColumns(20);
        guideProfileTxtArea.setRows(5);
        guideProfileScroller.setViewportView(guideProfileTxtArea);

        javax.swing.GroupLayout guideProfilePanLayout = new javax.swing.GroupLayout(guideProfilePan);
        guideProfilePan.setLayout(guideProfilePanLayout);
        guideProfilePanLayout.setHorizontalGroup(
            guideProfilePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, guideProfilePanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guideProfileScroller)
                .addContainerGap())
        );
        guideProfilePanLayout.setVerticalGroup(
            guideProfilePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideProfilePanLayout.createSequentialGroup()
                .addComponent(guideProfileScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addContainerGap())
        );

        guideReviewsPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Guide Reviews", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        guideReviewWriteBtn.setText("Write review");
        guideReviewWriteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guideReviewWriteBtnActionPerformed(evt);
            }
        });

        guideReviewSwitcher.setLayout(new java.awt.CardLayout());

        guideReviewsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guideReviewsListMouseClicked(evt);
            }
        });
        guideReviewScroller.setViewportView(guideReviewsList);

        javax.swing.GroupLayout guideReviewListPanLayout = new javax.swing.GroupLayout(guideReviewListPan);
        guideReviewListPan.setLayout(guideReviewListPanLayout);
        guideReviewListPanLayout.setHorizontalGroup(
            guideReviewListPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideReviewListPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guideReviewScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addContainerGap())
        );
        guideReviewListPanLayout.setVerticalGroup(
            guideReviewListPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideReviewListPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guideReviewScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );

        guideReviewSwitcher.add(guideReviewListPan, "card2");

        noGuideReviewsLab.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        noGuideReviewsLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noGuideReviewsLab.setText("No reviews for this guide yet");

        javax.swing.GroupLayout noGuideReviewsLayout = new javax.swing.GroupLayout(noGuideReviews);
        noGuideReviews.setLayout(noGuideReviewsLayout);
        noGuideReviewsLayout.setHorizontalGroup(
            noGuideReviewsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noGuideReviewsLab, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );
        noGuideReviewsLayout.setVerticalGroup(
            noGuideReviewsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noGuideReviewsLab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        guideReviewSwitcher.add(noGuideReviews, "card3");

        javax.swing.GroupLayout guideReviewsPanLayout = new javax.swing.GroupLayout(guideReviewsPan);
        guideReviewsPan.setLayout(guideReviewsPanLayout);
        guideReviewsPanLayout.setHorizontalGroup(
            guideReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideReviewsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(guideReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guideReviewWriteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guideReviewSwitcher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        guideReviewsPanLayout.setVerticalGroup(
            guideReviewsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideReviewsPanLayout.createSequentialGroup()
                .addComponent(guideReviewSwitcher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guideReviewWriteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        guideBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backArrow.png"))); // NOI18N
        guideBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guideBackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout guideChildLayout = new javax.swing.GroupLayout(guideChild);
        guideChild.setLayout(guideChildLayout);
        guideChildLayout.setHorizontalGroup(
            guideChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, guideChildLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(guideChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, guideChildLayout.createSequentialGroup()
                        .addComponent(guideBackBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(guideDetailsPan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guideProfilePan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guideReviewsPan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        guideChildLayout.setVerticalGroup(
            guideChildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guideChildLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guideDetailsPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guideProfilePan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guideReviewsPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(guideBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        selectedMainCard.add(guideChild, "card2");

        javax.swing.GroupLayout backgroundPanLayout = new javax.swing.GroupLayout(backgroundPan);
        backgroundPan.setLayout(backgroundPanLayout);
        backgroundPanLayout.setHorizontalGroup(
            backgroundPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainTitlePan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(backgroundPanLayout.createSequentialGroup()
                        .addComponent(searchParamsPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resultsPan, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addComponent(selectedSep, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanLayout.createSequentialGroup()
                        .addComponent(secondaryTitlePan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(selectedMainCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        backgroundPanLayout.setVerticalGroup(
            backgroundPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanLayout.createSequentialGroup()
                .addGroup(backgroundPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(backgroundPanLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(selectedSep))
                    .addGroup(backgroundPanLayout.createSequentialGroup()
                        .addGroup(backgroundPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(secondaryTitlePan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(backgroundPanLayout.createSequentialGroup()
                                .addComponent(mainTitlePan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectedMainCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resultsPan, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                            .addComponent(searchParamsPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        getContentPane().add(backgroundPan, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tourReviewRateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tourReviewRateBtnActionPerformed

        SearchManager.updateRating(currentTour.getName(), ratingChosen);
        /*
        Þar sem við getum ekki kannað IP-tölur eða þ.u.l. þá látum við
        bara hvert tour object geyma upplýsingar um það hvort það hafi verið búið
        að gefa því rating til að einfalda. Þ.a. þá er í raun hægt að searcha aftur og þá
        rate-a aftur sama tour, en það er viljandi.
        */
         for(Tour tourInList: tours){
             if (tourInList.getName().equals(currentTour.getName())){
                 tourInList.setUserRating(ratingChosen);
                 tourInList.setRated();
             }
         }
         tourReviewRateBtn.setEnabled(false);
         ((CardLayout)ratingSwitcher.getLayout()).last(ratingSwitcher);
         ratedStarsLab.setIcon(new ImageIcon(getClass().getResource("/Images/list"+currentTour.getUserRating()+"star.png")));
        
    }//GEN-LAST:event_tourReviewRateBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        tourModel.clear();
        orderCombo.setSelectedIndex(0);
        
        String priceLowStr = priceFromCombo.getSelectedItem().toString();
        Integer priceLow = null;
        if(!priceLowStr.equals("")) priceLow = priceToInt(priceLowStr);
        
        String priceHighStr = priceToCombo.getSelectedItem().toString();
        Integer priceHigh = null;
        if(!priceHighStr.equals("")) priceHigh = priceToInt(priceHighStr);
        
        Integer durationLow = null;
        if(!durationFromCombo.getSelectedItem().equals("")) durationLow = Integer.parseInt(durationFromCombo.getSelectedItem().toString());
        
        Integer durationHigh = null;
        if(!durationToCombo.getSelectedItem().equals("")) durationHigh = Integer.parseInt(durationToCombo.getSelectedItem().toString());
        
        Integer minSeats = null;
        if(!seatsTxt.getText().equals("")){
            try{
                minSeats = Integer.parseInt(seatsTxt.getText());
                if(minSeats<0) throw new NumberFormatException();
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Please only enter positive whole numbers in the Available seats field.");
            }
        }
        
        Integer rating = null;
        if(!ratingCombo.getSelectedItem().equals("")) rating = Integer.parseInt(ratingCombo.getSelectedItem().toString());
        
        boolean hotelPickup = pickupCheck.isSelected();
        
        Date dateFrom = fromDateChooser.getDate();
        Date dateTo = toDateChooser.getDate();
        String destination = destinationTxt.getText();
        String departure = departureTxt.getText();
        String tourType = typeCombo.getSelectedItem().toString();
        String tourName = nameTxt.getText();
        
        try{
            tours = SearchManager.createList(priceLow, priceHigh, durationLow, durationHigh, dateFrom, dateTo, minSeats, 
                    destination, departure, tourType, rating, hotelPickup, tourName);
            
            if(searchListImagePan.isShowing()) ((CardLayout)listSwitcherPan.getLayout()).previous(listSwitcherPan);
            else if(introListPan.isShowing()) ((CardLayout)listSwitcherPan.getLayout()).next(listSwitcherPan);
            
            for(Tour tour: tours){
                tourModel.addElement(tour);
            }
        }catch(NoSuchElementException e){
            if(listPan.isShowing() || introListPan.isShowing()) ((CardLayout)listSwitcherPan.getLayout()).last(listSwitcherPan);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void tourListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tourListValueChanged
        if(!evt.getValueIsAdjusting()){
            if(nothingChild.isShowing()) ((CardLayout)selectedMainCard.getLayout()).next(selectedMainCard);
            if(guideChild.isShowing()) ((CardLayout)selectedMainCard.getLayout()).previous(selectedMainCard);
            if((Tour)tourList.getSelectedValue()!=null){
                currentTour = (Tour)tourList.getSelectedValue();
                
                secondaryTitleLab.setText(currentTour.getName());
                tourTypeLab.setText("Type: "+currentTour.getType());
                tourPriceLab.setText("Price: "+priceToString(currentTour.getPrice()));
                tourDescTxt.setText(currentTour.getDescription());
                tourDescTxt.setCaretPosition(0);
                tourDateLab.setText("Date: "+currentTour.getDate());
                tourDepartureLab.setText("Departure from: "+currentTour.getDepartureLocation());
                tourDestinationLab.setText("Destination: "+currentTour.getDestination());
                tourDurationLab.setText("Duration: "+currentTour.getDuration()+" hrs.");
                tourSeatsLab.setText("Available seats: "+String.valueOf(currentTour.getSeatsAvailable()));
                if(currentTour.getPickup()) tourPickupLab.setText("Hotel pickup: Yes");
                else tourPickupLab.setText("Hotel pickup: No");

                if(currentTour.getGuides().isEmpty()) SearchManager.loadGuides(currentTour);
                ArrayList<Guide> guides = currentTour.getGuides();
                if(guides.size()==1){
                    tourGuideLab1.setText(guides.get(0).getNickName());
                    tourGuideLab2.setText("");
                    tourGuideLab3.setText("");
                } else if(guides.size()==2){
                    tourGuideLab1.setText(guides.get(0).getNickName());
                    tourGuideLab2.setText(guides.get(1).getNickName());
                    tourGuideLab3.setText("");
                } else{
                    tourGuideLab1.setText(guides.get(0).getNickName());
                    tourGuideLab2.setText(guides.get(1).getNickName());
                    tourGuideLab3.setText(guides.get(2).getNickName());
                }
                refreshTourReviewsList();
 
                if(currentTour.isRated()){
                    ((CardLayout)ratingSwitcher.getLayout()).last(ratingSwitcher);
                    ratedStarsLab.setIcon(new ImageIcon(getClass().getResource("/Images/list"+currentTour.getUserRating()+"star.png")));
                } else {
                    ((CardLayout)ratingSwitcher.getLayout()).first(ratingSwitcher);
                    tourStarsLab.setIcon(new ImageIcon(getClass().getResource("/Images/0star.png")));
                }
            }
        }

    }//GEN-LAST:event_tourListValueChanged

    private void tourStarsLabMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tourStarsLabMousePressed

            if(!currentTour.isRated()){
                int part = tourStarsLab.getWidth()/5;
                ImageIcon stars;
                if(evt.getX()<part*1){
                    stars = new ImageIcon(getClass().getResource("/Images/1star.png"));
                    ratingChosen = 1;
                } 
                else if(evt.getX()<part*2){
                    stars = new ImageIcon(getClass().getResource("/Images/2star.png"));
                    ratingChosen = 2;
                }
                else if(evt.getX()<part*3){
                    stars = new ImageIcon(getClass().getResource("/Images/3star.png"));
                    ratingChosen = 3;
                }
                else if(evt.getX()<part*4){
                    stars = new ImageIcon(getClass().getResource("/Images/4star.png"));
                    ratingChosen = 4;
                }
                else{
                    stars = new ImageIcon(getClass().getResource("/Images/5star.png"));
                    ratingChosen = 5;
                }
                tourStarsLab.setIcon(stars);
            }

    }//GEN-LAST:event_tourStarsLabMousePressed

    private void tourStarsLabMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tourStarsLabMouseReleased

        if(!currentTour.isRated()){
            tourReviewRateBtn.setEnabled(true);
        }
    }//GEN-LAST:event_tourStarsLabMouseReleased

    private void orderComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderComboActionPerformed
        
        if(tourModel.isEmpty()) return;
        if(orderCombo.getSelectedItem().equals("Name")){
            SearchManager.sortByName();
        }
        else if(orderCombo.getSelectedItem().equals("Date")){
            SearchManager.sortByDate();
        }
        else if(orderCombo.getSelectedItem().equals("Type")){
            SearchManager.sortByType();
        }
        else if(orderCombo.getSelectedItem().equals("Rating")){
            SearchManager.sortByRating();
        }
        else if(orderCombo.getSelectedItem().equals("Price")){
            SearchManager.sortByPrice();
        }
        tourModel.clear();
        for(Tour tour: tours){
                tourModel.addElement(tour);
        }

    }//GEN-LAST:event_orderComboActionPerformed

    private void guideReviewWriteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guideReviewWriteBtnActionPerformed
        new WriteGuideReviewDisplay(currentGuide.getName(),this).setVisible(true);
    }//GEN-LAST:event_guideReviewWriteBtnActionPerformed

    private void tourReviewWriteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tourReviewWriteBtnActionPerformed
        if(currentTour!=null) new WriteTourReviewDisplay(currentTour.getName(),this).setVisible(true);
    }//GEN-LAST:event_tourReviewWriteBtnActionPerformed

    private void tourGuideLab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tourGuideLab1MouseClicked

        if(currentTour!=null && currentTour.getGuides().size()>0){
            setGuideInfo(0);
            secondaryTitleLab.setText(tourGuideLab1.getText());
        }
    }//GEN-LAST:event_tourGuideLab1MouseClicked

    private void tourGuideLab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tourGuideLab2MouseClicked
        
        if(currentTour!=null && currentTour.getGuides().size()>1){
            setGuideInfo(1);
            secondaryTitleLab.setText(tourGuideLab2.getText());
        }
    }//GEN-LAST:event_tourGuideLab2MouseClicked

    private void tourGuideLab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tourGuideLab3MouseClicked
        
        if(currentTour!=null && currentTour.getGuides().size()>2){
            setGuideInfo(2);
            secondaryTitleLab.setText(tourGuideLab3.getText());
        }
    }//GEN-LAST:event_tourGuideLab3MouseClicked

    private void guideBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guideBackBtnActionPerformed

        ((CardLayout)selectedMainCard.getLayout()).previous(selectedMainCard);
        secondaryTitleLab.setText(currentTour.getName());
    }//GEN-LAST:event_guideBackBtnActionPerformed

    private void guideReviewsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guideReviewsListMouseClicked

        if(guideReviewsList.getSelectedValue()!=null){
            Review rev = (Review)guideReviewsList.getSelectedValue();
            
            new ReadReview(currentGuide,(Review)guideReviewsList.getSelectedValue(),this).setVisible(true);
        }
    }//GEN-LAST:event_guideReviewsListMouseClicked

    private void tourReviewListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tourReviewListMouseClicked

        if(tourReviewList.getSelectedValue()!=null){
            Review rev = (Review)tourReviewList.getSelectedValue();
            
            new ReadReview(currentTour,(Review)tourReviewList.getSelectedValue(),this).setVisible(true);
        }
    }//GEN-LAST:event_tourReviewListMouseClicked

    private void setGuideInfo(int guideNum){
        ((CardLayout)selectedMainCard.getLayout()).next(selectedMainCard);
        guideNameLab.setText("Full name: "+currentTour.getGuides().get(guideNum).getName());
        currentGuide = currentTour.getGuides().get(guideNum);
        guideGenderLab.setText("Gender: "+currentTour.getGuides().get(guideNum).getGender());
        guideAgeLab.setText("Age: "+currentTour.getGuides().get(guideNum).getAge());
        guideProfileTxtArea.setText(currentTour.getGuides().get(guideNum).getProfile());
        guideProfileTxtArea.setCaretPosition(0);
        refreshGuideReviewsList();
    }
    
    private int priceToInt(String priceStr){
        StringBuilder priceB = new StringBuilder(priceStr);
        // losna við ' kr.' aftast í strengnum:
        priceB = priceB.delete(priceB.length()-4, priceB.length());
        // losna við punktana í strengnum:
        int index = priceB.indexOf(".");
        while(index!=-1){
            priceB.deleteCharAt(index);
            index = priceB.indexOf(".");
        }
        return Integer.parseInt(priceB.toString());	
    }

    public String priceToString(int price){
        StringBuilder build = new StringBuilder(String.valueOf(price));
        // setjum punkta í verðtöluna:
        for(int i = build.length()-3;i>0;i-=3) build.insert(i, '.');
            
        build.append(" kr.");
        return build.toString();
    }
    
    public void refreshTourReviewsList(){
        tourReviewModel.clear();
 
        try{
            SearchManager.loadTourReviews(currentTour);
            ((CardLayout)tourReviewSwitcher.getLayout()).first(tourReviewSwitcher);
        } catch (NoSuchElementException e){
            ((CardLayout)tourReviewSwitcher.getLayout()).last(tourReviewSwitcher);
        }

        for(Review tourRev: currentTour.getReviews()){
            tourReviewModel.addElement(tourRev);
        }
    }
    
    public void refreshGuideReviewsList(){
        guideReviewModel.clear();
        try{
            SearchManager.loadGuideReviews(currentGuide);
            ((CardLayout)guideReviewSwitcher.getLayout()).first(guideReviewSwitcher);
        } catch(NoSuchElementException e){
            ((CardLayout)guideReviewSwitcher.getLayout()).last(guideReviewSwitcher);
        }
        
        for(Review guideRev: currentGuide.getReviews()){
            guideReviewModel.addElement(guideRev);
        }
    }
    
    class ReviewCellRenderer extends JLabel implements ListCellRenderer {
        public ReviewCellRenderer() {
            setOpaque(true);
        }
        
        @Override
        public Component getListCellRendererComponent(JList list, Object value,
                int index, boolean isSelected, boolean cellHasFocus) {
            Review review = (Review) value;
            ReviewCell reviewEntry = new ReviewCell(review.getTitle());

            reviewEntry.setBorder(BorderFactory.createEtchedBorder());
            if (isSelected) {
                reviewEntry.setBackground(new Color(0,100,200,50));
            } else {
                reviewEntry.setBackground(Color.white);
                reviewEntry.setLettersColor(Color.black);
            }
            return reviewEntry;
        }
    }
    
    class TourCellRenderer extends JLabel implements ListCellRenderer {
        public TourCellRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getListCellRendererComponent(JList list, Object value,
          int index, boolean isSelected, boolean cellHasFocus) {
            Tour tour = (Tour) value;
            ImageIcon stars = new ImageIcon(getClass().getResource("/Images/list"+tour.getRating()+"star.png"));
            String price = priceToString(tour.getPrice());
            TourCell tourEntry = new TourCell(tour.getName(),stars,tour.getDate(),price);

            tourEntry.setBorder(BorderFactory.createEtchedBorder());
            if (isSelected) {
                tourEntry.setBackground(new Color(0,100,200,50));
            } else {
                tourEntry.setBackground(Color.white);
                tourEntry.setLettersColor(Color.black);
            }
            return tourEntry;
        }
     }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         *//*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BackupDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BackupDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BackupDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BackupDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPan;
    private javax.swing.JLabel dateFromLab;
    private javax.swing.JLabel dateLab;
    private javax.swing.JLabel dateToLab;
    private javax.swing.JLabel departureLab;
    private javax.swing.JTextField departureTxt;
    private javax.swing.JLabel destinationLab;
    private javax.swing.JTextField destinationTxt;
    private javax.swing.JComboBox durationFromCombo;
    private javax.swing.JLabel durationFromLab;
    private javax.swing.JLabel durationLab;
    private javax.swing.JComboBox durationToCombo;
    private javax.swing.JLabel durationToLab;
    private com.toedter.calendar.JDateChooser fromDateChooser;
    private javax.swing.JLabel guideAgeLab;
    private javax.swing.JButton guideBackBtn;
    private javax.swing.JPanel guideChild;
    private javax.swing.JPanel guideDetailsPan;
    private javax.swing.JLabel guideGenderLab;
    private javax.swing.JLabel guideNameLab;
    private javax.swing.JPanel guideProfilePan;
    private javax.swing.JScrollPane guideProfileScroller;
    private javax.swing.JTextArea guideProfileTxtArea;
    private javax.swing.JPanel guideReviewListPan;
    private javax.swing.JScrollPane guideReviewScroller;
    private javax.swing.JPanel guideReviewSwitcher;
    private javax.swing.JButton guideReviewWriteBtn;
    private javax.swing.JList guideReviewsList;
    private javax.swing.JPanel guideReviewsPan;
    private javax.swing.JLabel introLab;
    private javax.swing.JPanel introListPan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel listPan;
    private javax.swing.JPanel listSwitcherPan;
    private javax.swing.JLabel mainTitleLab;
    private javax.swing.JPanel mainTitlePan;
    private javax.swing.JLabel nameLab;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JPanel noGuideReviews;
    private javax.swing.JLabel noGuideReviewsLab;
    private javax.swing.JLabel noResLab;
    private javax.swing.JLabel noTourReviewsLab;
    private javax.swing.JPanel noTourReviewsPan;
    private javax.swing.JPanel nothingChild;
    private javax.swing.JLabel nothingLoadedLab;
    private javax.swing.JComboBox orderCombo;
    private javax.swing.JLabel orderLab;
    private javax.swing.JCheckBox pickupCheck;
    private javax.swing.JLabel pickupLab;
    private javax.swing.JComboBox priceFromCombo;
    private javax.swing.JLabel priceFromLab;
    private javax.swing.JLabel priceLab;
    private javax.swing.JComboBox priceToCombo;
    private javax.swing.JLabel priceToLab;
    private javax.swing.JPanel rateStarsPan;
    private javax.swing.JLabel ratedStarsLab;
    private javax.swing.JPanel ratedStarsPan;
    private javax.swing.JComboBox ratingCombo;
    private javax.swing.JLabel ratingFromLab;
    private javax.swing.JLabel ratingLab;
    private javax.swing.JPanel ratingSwitcher;
    private javax.swing.JLabel resultsLab;
    private javax.swing.JPanel resultsPan;
    private javax.swing.JButton searchBtn;
    private javax.swing.JPanel searchListImagePan;
    private javax.swing.JPanel searchParamsPan;
    private javax.swing.JLabel seatsErrorLab;
    private javax.swing.JLabel seatsLab;
    private javax.swing.JTextField seatsTxt;
    private javax.swing.JLabel secondaryTitleLab;
    private javax.swing.JPanel secondaryTitlePan;
    private javax.swing.JPanel selectedMainCard;
    private javax.swing.JSeparator selectedSep;
    private com.toedter.calendar.JDateChooser toDateChooser;
    private javax.swing.JLabel tourBeenLab;
    private javax.swing.JPanel tourChild;
    private javax.swing.JLabel tourDateLab;
    private javax.swing.JLabel tourDepartureLab;
    private javax.swing.JPanel tourDescPan;
    private javax.swing.JScrollPane tourDescScroller;
    private javax.swing.JTextArea tourDescTxt;
    private javax.swing.JLabel tourDestinationLab;
    private javax.swing.JPanel tourDetailsPan;
    private javax.swing.JLabel tourDurationLab;
    private javax.swing.JLabel tourGuideLab1;
    private javax.swing.JLabel tourGuideLab2;
    private javax.swing.JLabel tourGuideLab3;
    private javax.swing.JLabel tourGuidesLab;
    private javax.swing.JList tourList;
    private javax.swing.JLabel tourPickupLab;
    private javax.swing.JLabel tourPriceLab;
    private javax.swing.JList tourReviewList;
    private javax.swing.JPanel tourReviewListPan;
    private javax.swing.JButton tourReviewRateBtn;
    private javax.swing.JScrollPane tourReviewScroller;
    private javax.swing.JSeparator tourReviewSep;
    private javax.swing.JPanel tourReviewSwitcher;
    private javax.swing.JButton tourReviewWriteBtn;
    private javax.swing.JPanel tourReviewsPan;
    private javax.swing.JScrollPane tourScroller;
    private javax.swing.JLabel tourSeatsLab;
    private javax.swing.JLabel tourStarsLab;
    private javax.swing.JSeparator tourStarsSep;
    private javax.swing.JLabel tourTypeLab;
    private javax.swing.JComboBox typeCombo;
    private javax.swing.JLabel typeLab;
    private javax.swing.JLabel youRatedLab;
    // End of variables declaration//GEN-END:variables
}
